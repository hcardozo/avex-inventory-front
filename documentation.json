{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "MetodosComunesService",
            "id": "injectable-MetodosComunesService-2cf1377fa3ad0850d7812ca0cfd34949",
            "file": "src/app/compartido/services/metodosComunes/metodos-comunes.service.ts",
            "properties": [
                {
                    "name": "datepipe",
                    "type": "DatePipe",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "generarContrasenaAleatoria",
                    "args": [
                        {
                            "name": "tamaño",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 11,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "tamaño",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "obtenerFecha",
                    "args": [
                        {
                            "name": "fechaActual",
                            "type": "Date"
                        },
                        {
                            "name": "format",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "fechaActual",
                            "type": "Date",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "format",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { DatePipe } from '@angular/common';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MetodosComunesService {\n\n  constructor(\n    public datepipe: DatePipe\n  ) { }\n\n  public generarContrasenaAleatoria(tamaño: number): string {\n    let posiblesCaracteres: string ='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var tamañoPosiblesCaracteres= posiblesCaracteres.length;\n    let contraseña: string = '';\n    for ( var i = 0; i < tamaño; i++ ) {\n      contraseña += posiblesCaracteres.charAt(Math.floor(Math.random() * tamañoPosiblesCaracteres));\n    }\n    return contraseña;\n  }\n\n  public obtenerFecha(fechaActual: Date, format?: string): string {\n    return this.datepipe.transform(fechaActual, format);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "datepipe",
                        "type": "DatePipe"
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "datepipe",
                        "type": "DatePipe",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c75244de65f5900a6e9a6ce91783c0b3",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'avex-inventory'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'avex-inventory';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "InicioComponent",
            "id": "component-InicioComponent-6ff4d1f5921055f2c02b06c18e3def34",
            "file": "src/app/privada/components/inicio/inicio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-inicio",
            "styleUrls": [
                "./inicio.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./inicio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.scss']\n})\nexport class InicioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./inicio.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>inicio works!</p>\n"
        },
        {
            "name": "InicioSesionComponent",
            "id": "component-InicioSesionComponent-48f11f1a783a9a5f64466161fb4da79e",
            "file": "src/app/publica/components/inicio-sesion/inicio-sesion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-inicio-sesion",
            "styleUrls": [
                "./inicio-sesion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./inicio-sesion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inicioSesionGroup",
                    "defaultValue": "new FormGroup({\n    nombre: new FormControl('', [Validators.required]),\n    clave: new FormControl('', [Validators.required]),\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "iniciarSesion",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from 'avex-api';\nimport { USER_SESION_KEY } from 'src/environments/constantes';\n\n@Component({\n  selector: 'app-inicio-sesion',\n  templateUrl: './inicio-sesion.component.html',\n  styleUrls: ['./inicio-sesion.component.scss']\n})\nexport class InicioSesionComponent implements OnInit {\n\n  public inicioSesionGroup: FormGroup = new FormGroup({\n    nombre: new FormControl('', [Validators.required]),\n    clave: new FormControl('', [Validators.required]),\n  });;\n  constructor(\n    private router: Router,\n    private usuarioService: UsuarioService\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  public iniciarSesion(): void {\n    this.usuarioService.validarUsuario({\n      parametro: {\n        usuario: this.inicioSesionGroup.controls.nombre.value,\n        contrasena: this.inicioSesionGroup.controls.clave.value\n      }\n    }).subscribe((value: any) => {\n      if (value && value.resultado) {\n        localStorage.setItem(USER_SESION_KEY, JSON.stringify(value.resultado));\n        this.router.navigate(['privada']);\n      }\n    })\n\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@mixin borde-contenedor {\r\n    border: 1px solid rgba(172,172,172,1);\r\n}\r\n\r\n.contenedor-login {\r\n    position: absolute;\r\n    top: 10%;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n    padding: 0;\r\n\r\n}\r\n\r\n.cabecera {\r\n    @include borde-contenedor();\r\n    background-color: rgba(172,172,172,0.7);\r\n    text-align: center;\r\n    padding: 2px;\r\n}\r\n\r\n.cuerpo {\r\n    @include borde-contenedor();\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 2% 20%;\r\n\r\n    .imagen-inicio-sesion {\r\n        width: 40%;\r\n        height: auto;\r\n    }\r\n\r\n    form {\r\n        width: 100%;\r\n    }\r\n\r\n    label {\r\n        width: 100%;\r\n    }\r\n    input {\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n.restablecer-contraseña {\r\n    margin: 15px 0px;\r\n}\r\n\r\n.boton-inicio-sesion {\r\n    margin: 15px 0px;\r\n    width: 80%;\r\n\r\n}\r\n",
                    "styleUrl": "./inicio-sesion.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "usuarioService",
                        "type": "UsuarioService"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "usuarioService",
                        "type": "UsuarioService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section>\n  <div class=\"contenedor-login col-lg-4 col-md-6 col-sm-8 col-10\">\n    <div class=\"cabecera\">\n      INICIO DE SESIÓN\n    </div>\n    <div class=\"cuerpo\">\n      <img\n        class=\"imagen-inicio-sesion\"\n        src=\"https://images.vectorhq.com/images/previews/949/war-s-symbol-darksiders-ps3-360-psd-455340.png\"\n      />\n\n      <form [formGroup]=\"inicioSesionGroup\">\n        <label for=\"usuario\">Usuario</label>\n        <input\n          type=\"text\"\n          autocomplete=\"off\"\n          formControlName=\"nombre\"\n          class=\"form-control\"\n          id=\"usuario\"\n        />\n        <label for=\"clave\">Contraseña</label>\n        <input\n          type=\"password\"\n          autocomplete=\"off\"\n          formControlName=\"clave\"\n          class=\"form-control\"\n          id=\"clave\"\n        />\n      </form>\n\n      <a class=\"restablecer-contraseña\" href=\"\">Restablecer Contraseña</a>\n      <button\n        class=\"btn btn-primary boton-inicio-sesion\"\n        [disabled]=\"!inicioSesionGroup.valid\"\n        (click)=\"iniciarSesion()\"\n      >\n        Ingresar\n      </button>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "ListarUsuarioComponent",
            "id": "component-ListarUsuarioComponent-5943b15e9be004a4299c745a4ac34b96",
            "file": "src/app/privada/modules/usuario/components/listar-usuario/listar-usuario.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-listar-usuario",
            "styleUrls": [
                "./listar-usuario.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./listar-usuario.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-listar-usuario',\n  templateUrl: './listar-usuario.component.html',\n  styleUrls: ['./listar-usuario.component.scss']\n})\nexport class ListarUsuarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./listar-usuario.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>listar-usuario works!</p>\n"
        },
        {
            "name": "MaestroComponent",
            "id": "component-MaestroComponent-bb89ffd02c0676a5621d275bbc3e1467",
            "file": "src/app/privada/components/maestro/maestro.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-maestro",
            "styleUrls": [
                "./maestro.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./maestro.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "estadoItemMenu",
                    "defaultValue": "[]",
                    "type": "boolean[]",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "menu",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "mobileQuery",
                    "type": "MediaQueryList",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "mobileQueryListener",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "cambiarEstadoItemMenu",
                    "args": [
                        {
                            "name": "estado",
                            "type": "literal type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "estado",
                            "type": "literal type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cargarMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "redireccionar",
                    "args": [
                        {
                            "name": "ruta",
                            "type": "string"
                        },
                        {
                            "name": "datos",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "ruta",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "datos",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, OnDestroy, OnInit, ɵConsole } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MenuService } from 'avex-api';\nimport { IConsultarMenu } from 'avex-api/lib/modules/menu/interfaces/consultar-menu.interface';\nimport { USER_SESION_KEY } from 'src/environments/constantes';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\n@Component({\n  selector: 'app-maestro',\n  templateUrl: './maestro.component.html',\n  styleUrls: ['./maestro.component.scss']\n})\nexport class MaestroComponent implements OnDestroy {\n\n  private mobileQueryListener: () => void;\n\n  public mobileQuery: MediaQueryList;\n  public menu: any;\n  public estadoItemMenu: boolean[] = [];\n  \n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    private menuService: MenuService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this.mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addEventListener('change', this.mobileQueryListener);\n    this.cargarMenu();\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeEventListener('change', this.mobileQueryListener);\n  }\n\n  private cargarMenu(): void {\n    let sesionUsuario: any = JSON.parse(localStorage.getItem(USER_SESION_KEY));\n    let objeto: any = {\n      guid: sesionUsuario ? sesionUsuario.usuarioAvexInfo.guid : ''\n    }\n    \n    this.menuService.consultarMenu({ parametro: objeto }).subscribe((data: any) => {\n      if (data && data.resultadoList) {\n        data.resultadoList.forEach(element => {\n          let opcionesAnidadas: any = element.itemMenu.filter((item) => item.nivelMenu === 2);\n          element.anidados = opcionesAnidadas;\n        });\n        this.menu = data ? data.resultadoList : [];\n      }\n    });\n  }\n\n  public cambiarEstadoItemMenu(estado: { [index: string]: any }) {\n    estado.seleccionado = estado.seleccionado!\n  }\n\n  public redireccionar(ruta: string, datos: any) {\n    let parametro: NavigationExtras = {\n      state: {\n        datos\n      },\n      relativeTo: this.activatedRoute.parent\n    }\n    this.router.navigate([`.${ruta}`], parametro);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".contenedor {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.responsive .toolbar {\r\n  position: fixed;\r\n  z-index: 2;\r\n}\r\n\r\nh1.titulo {\r\n  margin-left: 8px;\r\n}\r\n\r\n.sidenav-container {\r\n  flex: 1;\r\n}\r\n\r\n.responsive .sidenav-container {\r\n  flex: 1 0 auto;\r\n}\r\n\r\nbutton:focus {\r\n  outline: none;\r\n}\r\n\r\n.mat-side-menu {\r\n  width: 15%;\r\n}\r\n\r\n@media screen and (max-width: 1150px) {\r\n  .mat-side-menu {\r\n    min-width: 20%;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 900px) {\r\n  .mat-side-menu {\r\n    min-width: 25%;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 600px) {\r\n  .mat-side-menu {\r\n    min-width: 35%;\r\n  }\r\n}\r\n.padre {\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.sub-item-menu {\r\n  border-radius: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border: unset;\r\n  border-top: 1px solid rgba(0, 0, 0, 0.125);\r\n}\r\n\r\n.sub-item-menu:hover {\r\n  background-color: rgba(0, 0, 0, 0.09);\r\n}\r\n",
                    "styleUrl": "./maestro.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef"
                    },
                    {
                        "name": "media",
                        "type": "MediaMatcher"
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "media",
                        "type": "MediaMatcher",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<div class=\"contenedor\" [class.responsive]=\"mobileQuery.matches\">\n  <mat-toolbar color=\"primary\" class=\"toolbar\">\n    <button mat-icon-button (click)=\"snav.toggle()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <h1 class=\"titulo\">Avex Inventory</h1>\n  </mat-toolbar>\n\n  <mat-sidenav-container class=\"sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\n    <mat-sidenav #snav  opened=\"true\" [mode]=\"mobileQuery.matches ? 'over' : 'side'\" [fixedInViewport]=\"mobileQuery.matches\"\n      fixedTopGap=\"56\" class=\"mat-side-menu\">\n      <mat-nav-list *ngIf=\"menu\">\n        <div  *ngFor=\"let seccion of menu; let i = index;\">\n          <a mat-list-item \n            [ngClass]=\"[ seccion.itemMenu ? 'padre' : '']\" (click)=\"estadoItemMenu[i] = !estadoItemMenu[i]\">\n            {{seccion.nombreSeccion}}\n          </a>\n          <div id=\"collapseBasic\" *ngIf=\"seccion.itemMenu\" [collapse]=\"!estadoItemMenu[i]\" [isAnimated]=\"true\">\n            <ng-container *ngFor=\"let opcion of seccion.itemMenu\" >\n              <div *ngIf=\"opcion.nivelMenu == 1\" class=\"sub-item-menu card card-block card-header\" (click)=\"redireccionar(opcion.routeLink, seccion.anidados)\">\n                <span> {{opcion.labelMenu}}  </span>\n                <i class=\"fa {{opcion.icono}}\"></i>\n              </div>\n\n            </ng-container>\n          </div>\n        </div>\n        <hr>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n      <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n"
        },
        {
            "name": "NotFoundComponent",
            "id": "component-NotFoundComponent-b1a88fa6fba2daac3112da5692c9c00a",
            "file": "src/app/compartido/components/not-found/not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-not-found",
            "styleUrls": [
                "./not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>not-found works!</p>\n"
        },
        {
            "name": "RegistrarUsuarioComponent",
            "id": "component-RegistrarUsuarioComponent-4b26c4df35f748ae014a19643199a8a9",
            "file": "src/app/privada/modules/usuario/components/registrar-usuario/registrar-usuario.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-registrar-usuario",
            "styleUrls": [
                "./registrar-usuario.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./registrar-usuario.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formBuilder",
                    "type": "FormBuilder",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "formularioUsuario",
                    "defaultValue": "new FormGroup({\n    usuario: new FormControl('', [Validators.required]),\n    clave: new FormControl('', [Validators.required]),\n    confirmacionClave: new FormControl('', [Validators.required]),\n    nombreCompleto: new FormControl('', [Validators.required]),\n    tipoDeDocumento: new FormControl('1', [Validators.required]),\n    numeroIdentificacion: new FormControl('', [Validators.required]),\n    correoCorporativo: new FormControl('', [Validators.required, Validators.pattern(new RegExp('[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}'))]),\n    confirmacionCorreoCorporativo: new FormControl('', [Validators.required, Validators.pattern(new RegExp('[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}'))]),\n    telefono: new FormControl('', [Validators.required]),\n    perfil: new FormControl('', [Validators.required]),\n    habilitar: new FormControl(true, [Validators.required]),\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "metodosComunes",
                    "type": "MetodosComunesService",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "usuarioService",
                    "type": "UsuarioService",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "agregarUsuario",
                    "args": [
                        {
                            "name": "controles",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "controles",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "crearContrasena",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IRegistrarUsuario, UsuarioService } from 'avex-api';\nimport { MetodosComunesService } from 'src/app/compartido/services/metodosComunes/metodos-comunes.service';\nimport { USER_SESION_KEY } from 'src/environments/constantes';\n\n@Component({\n  selector: 'app-registrar-usuario',\n  templateUrl: './registrar-usuario.component.html',\n  styleUrls: ['./registrar-usuario.component.scss']\n})\nexport class RegistrarUsuarioComponent implements OnInit {\n\n  public formularioUsuario: FormGroup = new FormGroup({\n    usuario: new FormControl('', [Validators.required]),\n    clave: new FormControl('', [Validators.required]),\n    confirmacionClave: new FormControl('', [Validators.required]),\n    nombreCompleto: new FormControl('', [Validators.required]),\n    tipoDeDocumento: new FormControl('1', [Validators.required]),\n    numeroIdentificacion: new FormControl('', [Validators.required]),\n    correoCorporativo: new FormControl('', [Validators.required, Validators.pattern(new RegExp('[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}'))]),\n    confirmacionCorreoCorporativo: new FormControl('', [Validators.required, Validators.pattern(new RegExp('[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}'))]),\n    telefono: new FormControl('', [Validators.required]),\n    perfil: new FormControl('', [Validators.required]),\n    habilitar: new FormControl(true, [Validators.required]),\n  });\n  constructor(\n    public formBuilder: FormBuilder,\n    public metodosComunes: MetodosComunesService,\n    public usuarioService: UsuarioService) { }\n\n  ngOnInit(): void {\n  }\n\n  public get formulario(): any {\n    return this.formularioUsuario.controls\n  }\n\n  public crearContrasena(): void {\n    let nuevaContraseña: string = this.metodosComunes.generarContrasenaAleatoria(8);\n    this.formularioUsuario.controls.clave.setValue(nuevaContraseña);\n    this.formularioUsuario.controls.confirmacionClave.setValue(nuevaContraseña);\n    this.formularioUsuario.updateValueAndValidity();\n  }\n\n  public agregarUsuario(controles: any): void {\n    let datosSesion: any = JSON.parse(localStorage.getItem(USER_SESION_KEY));\n    let datos: IRegistrarUsuario = {\n      usuario: controles.usuario.value,\n      contrasena: controles.clave.value,\n      confirmarContrasena: controles.confirmacionClave.value,\n      guid: datosSesion ? datosSesion.usuarioAvexInfo.guid : '',\n      nombre: controles.nombreCompleto.value,\n      tipo_documento: controles.tipoDeDocumento.value,\n      documento: controles.numeroIdentificacion.value,\n      email: controles.correoCorporativo.value,\n      telefono: controles.telefono.value,\n      id_perfil: controles.perfil.value,\n      usuarioCreacion: 'test',\n      fechaCreacion: this.metodosComunes.obtenerFecha(new Date(), 'yyyy-MM-dd HH:mm:ss')\n    };\n    this.usuarioService.registrarUsuario({ parametro: datos }).subscribe((response: any) => {\n      debugger\n    })\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".contenedor {\r\n    background: rgba($color: #000000, $alpha: 0.1);\r\n    margin: 2% 10% !important;\r\n    padding: 20px 40px;\r\n}\r\n\r\n.item-formulario {\r\n    display: flex;\r\n    margin: 5px 0px;\r\n    > label {\r\n        margin: auto;\r\n        min-width: 35%;\r\n    }\r\n\r\n    > input {\r\n        height: 30px;\r\n        border-radius: 0.5rem;\r\n    }\r\n\r\n    > button {\r\n        padding: 0px 20px;\r\n        margin-left: 5px;\r\n        height: 28px;\r\n    }\r\n\r\n    > .label-personalizado {\r\n        margin: auto 0;\r\n    }\r\n}\r\n\r\n.text-danger {\r\n    margin-left: 35%;\r\n}\r\n\r\n.contenedor-botones {\r\n    button {\r\n        margin-left: 90%;\r\n    }\r\n}\r\n",
                    "styleUrl": "./registrar-usuario.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "metodosComunes",
                        "type": "MetodosComunesService"
                    },
                    {
                        "name": "usuarioService",
                        "type": "UsuarioService"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "metodosComunes",
                        "type": "MetodosComunesService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "usuarioService",
                        "type": "UsuarioService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "formulario": {
                    "name": "formulario",
                    "getSignature": {
                        "name": "formulario",
                        "type": "any",
                        "returnType": "any",
                        "line": 35
                    }
                }
            },
            "templateData": "<div class=\"contenedor\">\n    <h2>\n        <i class=\"fa fa-align-justify\"></i> Agregar Usuario\n    </h2>\n    <form [formGroup]=\"formularioUsuario\">\n        <div class=\"item-formulario\">\n            <label for=\"usuario\">Usuario</label>\n            <input type=\"text\" placeholder=\"Nombre de Usuario\" autocomplete=\"off\" formControlName=\"usuario\"\n                class=\"form-control\" id=\"usuario\" />\n        </div>\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.usuario.dirty && formulario.usuario.errors && formulario.usuario.errors.required\">\n            Campo de usuario es requerido\n        </span>\n\n        <div class=\"item-formulario\">\n            <label for=\"clave\">Contraseña</label>\n            <input type=\"text\" placeholder=\"Contraseña\" autocomplete=\"off\" formControlName=\"clave\" class=\"form-control\"\n                id=\"clave\" />\n            <button class=\"btn btn-light\" (click)=\"crearContrasena()\"> Generar</button>\n        </div>\n\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.clave.dirty && formulario.clave.errors && formulario.clave.errors.required\">\n            Campo de clave es requerido\n        </span>\n\n        <div class=\"item-formulario\">\n            <label for=\"confirmacionClave\">Confirmacion Contraseña</label>\n            <input type=\"text\" placeholder=\"Volver a Escribir Contraseña\" autocomplete=\"off\"\n                formControlName=\"confirmacionClave\" class=\"form-control\" id=\"confirmacionClave\" />\n        </div>\n\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.confirmacionClave.dirty && formulario.confirmacionClave.errors && formulario.confirmacionClave.errors.required\">\n            Campo de confirmacion de clave es requerido\n        </span>\n\n        <div class=\"item-formulario\">\n            <label for=\"nombreCompleto\">Nombre Completo</label>\n            <input type=\"text\" placeholder=\"Nombre Completo\" autocomplete=\"off\" formControlName=\"nombreCompleto\"\n                class=\"form-control\" id=\"nombreCompleto\" />\n        </div>\n\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.nombreCompleto.dirty && formulario.nombreCompleto.errors && formulario.nombreCompleto.errors.required\">\n            Campo de Nombre Completo es requerido\n        </span>\n\n        <div class=\"item-formulario\">\n            <label for=\"tipoDeDocumento\">Tipo de Documento</label>\n            <!-- <input type=\"text\" placeholder=\"Tipo de Documento\" autocomplete=\"off\" formControlName=\"tipoDeDocumento\"\n                class=\"form-control\" id=\"tipoDeDocumento\" /> -->\n            <select type=\"number\" placeholder=\"Tipo de Documento\" autocomplete=\"off\" formControlName=\"tipoDeDocumento\"\n                class=\"form-control\" id=\"tipoDeDocumento\">\n                <option value=\"1\">Cedula de ciudadania</option>\n                <option value=\"2\">Cedula de ciudadania2</option>\n                <option value=\"3\">Cedula de ciudadania3</option>\n            </select>\n        </div>\n\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.tipoDeDocumento.dirty && formulario.tipoDeDocumento.errors && formulario.tipoDeDocumento.errors.required\">\n            Campo de tipo de documento es requerido\n        </span>\n\n        <div class=\"item-formulario\">\n            <label for=\"numeroIdentificacion\">Numero de Identificacion</label>\n            <input type=\"text\" placeholder=\"Numero de Identificacion\" autocomplete=\"off\"\n                formControlName=\"numeroIdentificacion\" class=\"form-control\" id=\"numeroIdentificacion\" />\n        </div>\n\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.numeroIdentificacion.dirty && formulario.numeroIdentificacion.errors && formulario.numeroIdentificacion.errors.required\">\n            Campo de identificacion es requerido\n        </span>\n\n        <div class=\"item-formulario\">\n            <label for=\"correoCorporativo\">Correo corporativo</label>\n            <input type=\"text\" placeholder=\"Correo Electronico Corporativo\" autocomplete=\"off\"\n                formControlName=\"correoCorporativo\" class=\"form-control\" id=\"correoCorporativo\" />\n        </div>\n\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.correoCorporativo.dirty && formulario.correoCorporativo.errors && formulario.correoCorporativo.errors.required\">\n            Campo de correo corporativo es requerido\n        </span>\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.correoCorporativo.dirty && formulario.correoCorporativo.errors && formulario.correoCorporativo.errors.pattern\">\n            Campo de correo corporativo es invalido\n        </span>\n\n        <div class=\"item-formulario\">\n            <label for=\"confirmacionCorreoCorporativo\">Confirmacion Correo Corporativo</label>\n            <input type=\"text\" placeholder=\"Volver a Escribir Correo Electronico Corporativo\" autocomplete=\"off\"\n                formControlName=\"confirmacionCorreoCorporativo\" class=\"form-control\"\n                id=\"confirmacionCorreoCorporativo\" />\n        </div>\n\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.confirmacionCorreoCorporativo.dirty && formulario.confirmacionCorreoCorporativo.errors && formulario.confirmacionCorreoCorporativo.errors.required\">\n            Campo de confirmacion de correo corporativo es requerido\n        </span>\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.confirmacionCorreoCorporativo.dirty && formulario.confirmacionCorreoCorporativo.errors && formulario.confirmacionCorreoCorporativo.errors.pattern\">\n            Campo de confirmacion de correo corporativo es invalido\n        </span>\n\n        <div class=\"item-formulario\">\n            <label for=\"telefono\">Telefono</label>\n            <input type=\"text\" placeholder=\"Telefono\" autocomplete=\"off\" formControlName=\"telefono\" class=\"form-control\"\n                id=\"telefono\" />\n        </div>\n\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.telefono.dirty && formulario.telefono.errors && formulario.telefono.errors.required\">\n            Campo de telefono es requerido\n        </span>\n\n        <div class=\"item-formulario\">\n            <label class=\"label-personalizado\" for=\"perfil\">Perfil</label>\n            <!-- <input type=\"text\" placeholder=\"Perfil\" autocomplete=\"off\" formControlName=\"perfil\" class=\"form-control\"\n                id=\"perfil\" /> -->\n            <mat-button-toggle-group formControlName=\"perfil\" id=\"perfil\">\n                <mat-button-toggle value=\"1\">Administrador</mat-button-toggle>\n                <mat-button-toggle value=\"2\">Usuario</mat-button-toggle>\n                <mat-button-toggle value=\"3\">Defecto</mat-button-toggle>\n            </mat-button-toggle-group>\n        </div>\n\n        <span class=\"text-danger\"\n            *ngIf=\"formulario.perfil.dirty && formulario.perfil.errors && formulario.perfil.errors.required\">\n            Campo de perfil es requerido\n        </span>\n\n        <div class=\"item-formulario\">\n            <label class=\"label-personalizado\" for=\"habilitar\">Habilitar</label>\n            <!-- <input type=\"text\" placeholder=\"Habilitar\" autocomplete=\"off\" formControlName=\"habilitar\"\n                class=\"form-control\" id=\"habilitar\" /> -->\n            <mat-slide-toggle formControlName=\"habilitar\" color=\"primary\" id=\"habilitar\">\n\n            </mat-slide-toggle>\n        </div>\n\n        <div class=\"contenedor-botones\">\n            <button class=\"btn btn-primary\" (click)=\"agregarUsuario(formulario)\" [disabled]=\"!formularioUsuario.valid\">\n                Agregar\n            </button>\n        </div>\n    </form>\n\n\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AutenticacionInterceptor"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CompartidoModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CompartidoModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "MetodosComunesService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NotFoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PrivadaModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InicioComponent"
                        },
                        {
                            "name": "MaestroComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PrivadaRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PrivadaRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PublicaModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InicioSesionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PublicaRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PublicaRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UsuarioGuiModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AutenticacionInterceptor"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ListarUsuarioComponent"
                        },
                        {
                            "name": "RegistrarUsuarioComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CompartidoModule"
                        },
                        {
                            "name": "UsuarioRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UsuarioRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "configuracionUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "IConfiguracionUrl",
                "defaultValue": "{\n  dominio: '26.11.114.212',\n  prefijo: 'api',\n  protocolo: 'https',\n  puerto: '5001'\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "USER_SESION_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/constantes.ts",
                "type": "string",
                "defaultValue": "'USER_SESSION'"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.module.ts": [
                {
                    "name": "configuracionUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "IConfiguracionUrl",
                    "defaultValue": "{\n  dominio: '26.11.114.212',\n  prefijo: 'api',\n  protocolo: 'https',\n  puerto: '5001'\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/constantes.ts": [
                {
                    "name": "USER_SESION_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/constantes.ts",
                    "type": "string",
                    "defaultValue": "'USER_SESSION'"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "pathMatch": "full",
                        "redirectTo": "publica"
                    },
                    {
                        "path": "404",
                        "component": "NotFoundComponent"
                    },
                    {
                        "path": "publica",
                        "loadChildren": "./publica/publica.module#PublicaModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/publica/publica-routing.module.ts",
                                        "module": "PublicaRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "redirectTo": "inicio-sesion"
                                            },
                                            {
                                                "path": "inicio-sesion",
                                                "component": "InicioSesionComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "PublicaModule"
                            }
                        ]
                    },
                    {
                        "path": "privada",
                        "loadChildren": "./privada/privada.module#PrivadaModule",
                        "canLoad": [
                            "SesionGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/privada/privada-routing.module.ts",
                                        "module": "PrivadaRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "MaestroComponent",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "redirectTo": "inicio"
                                                    },
                                                    {
                                                        "path": "inicio",
                                                        "component": "InicioComponent"
                                                    },
                                                    {
                                                        "path": "usuarios",
                                                        "loadChildren": "./modules/usuario/usuario.module#UsuarioGuiModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/privada/modules/usuario/usuario-routing.module.ts",
                                                                        "module": "UsuarioRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "redirectTo": "registrarUsuario"
                                                                            },
                                                                            {
                                                                                "path": "registrarUsuario",
                                                                                "component": "RegistrarUsuarioComponent"
                                                                            },
                                                                            {
                                                                                "path": "listarUsuario",
                                                                                "component": "ListarUsuarioComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "UsuarioGuiModule"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "PrivadaModule"
                            }
                        ]
                    },
                    {
                        "path": "**",
                        "redirectTo": "404"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configuracionUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/compartido/components/not-found/not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/compartido/services/metodosComunes/metodos-comunes.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MetodosComunesService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/privada/components/inicio/inicio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InicioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/privada/components/maestro/maestro.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MaestroComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/privada/guards/sesion/sesion.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "SesionGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/privada/inteceptors/autenticacion.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "AutenticacionInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/privada/modules/usuario/components/listar-usuario/listar-usuario.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListarUsuarioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/privada/modules/usuario/components/registrar-usuario/registrar-usuario.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegistrarUsuarioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/publica/components/inicio-sesion/inicio-sesion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InicioSesionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/constantes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "USER_SESION_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}